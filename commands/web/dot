#!/bin/bash
set -eo pipefail

## #ddev-generated
## Description: executes a script from tools/scripts/laravel
## Usage: dot
## Example: ddev dot
## ExecRaw: true
## TODO move to web but investigate how to install dependencies(fzf docspar)

##TODO: when read context and script, re rund dot() function to execute full paths
## add two branches if has not arguments (get arguments) and two if has argument(call execute script)

readonly SCRIPT_DIR="/var/www/html/tools/scripts"

# If at least two args, run non-interactive
if [[ $# -ge 2 ]]; then
  context="$1"
  script_name="$2"
  shift 2
  target="$SCRIPT_DIR/$context/$script_name"

  # Sanity checks
  if [[ ! -d "$SCRIPT_DIR/$context" ]]; then
    echo "Error: context folder '$context' not found in '$SCRIPT_DIR'." >&2
    exit 2
  fi
  if [[ ! -f "$target" ]]; then
    echo "Error: script '$script_name' not found in '$SCRIPT_DIR/$context'." >&2
    exit 3
  fi

  # Execute it inside the web container, forwarding all args
  ddev exec bash -lc "\"$target\" \"$@\""
  exit
fi

# ——— Interactive picker ———

get_contexts() {
  # List only folders under tools/scripts/laravel
  ddev exec "find '$SCRIPT_DIR' -mindepth 1 -maxdepth 1 -type d -printf '%f\n'"
}

get_scripts() {
  local ctx="$1"
  ddev exec "find '$SCRIPT_DIR/$ctx' -type f -printf '%f\n'"
}

run_interactive() {
  # First choose context
  ctx=$(get_contexts | fzf --header="Select context" --prompt="Context> ")
  [[ -n "$ctx" ]] || exit

  # Then choose a script within it
  script=$(get_scripts "$ctx" |
    fzf \
      --preview="ddev exec bash -lc 'cat \"$SCRIPT_DIR/$ctx/{}\"'" \
      --preview-window="right:60%" \
      --header="Select script in '$ctx'" \
      --prompt="Script> " \
      --bind="ctrl-space:toggle-preview")
  [[ -n "$script" ]] || exit

  # Run it
  ddev exec bash -lc "\"$SCRIPT_DIR/$ctx/$script\""
}

run_interactive
